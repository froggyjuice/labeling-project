# upstream 설정 (Django 애플리케이션)
upstream django_app {
    server web:8000;
}

# HTTP에서 HTTPS로 리다이렉트
server {
    listen 80;
    server_name your-domain.com www.your-domain.com;
    
    # Let's Encrypt 인증서 갱신을 위한 경로
    location /.well-known/acme-challenge/ {
        root /var/www/certbot;
    }
    
    # 모든 HTTP 요청을 HTTPS로 리다이렉트
    location / {
        return 301 https://$server_name$request_uri;
    }
}

# HTTPS 메인 설정
server {
    listen 443 ssl http2;
    server_name your-domain.com www.your-domain.com;
    
    # SSL 인증서 설정 (Let's Encrypt)
    ssl_certificate /etc/letsencrypt/live/your-domain.com/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/your-domain.com/privkey.pem;
    
    # SSL 보안 설정
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers ECDHE-RSA-AES256-GCM-SHA512:DHE-RSA-AES256-GCM-SHA512:ECDHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-SHA384;
    ssl_prefer_server_ciphers off;
    ssl_session_cache shared:SSL:10m;
    ssl_session_timeout 10m;
    ssl_stapling on;
    ssl_stapling_verify on;
    
    # HSTS 설정
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains; preload" always;
    
    # 정적 파일 서빙
    location /static/ {
        alias /var/www/static/;
        expires 30d;
        add_header Cache-Control "public, no-transform";
        access_log off;
    }
    
    # 미디어 파일 서빙 (업로드된 이미지)
    location /media/ {
        alias /var/www/media/;
        expires 7d;
        add_header Cache-Control "public, no-transform";
        
        # 이미지 파일만 허용
        location ~* \.(jpg|jpeg|png|gif|webp)$ {
            alias /var/www/media/;
        }
        
        # 다른 파일 타입은 거부
        location ~* \.(txt|md|py|js|css|html)$ {
            deny all;
        }
    }
    
    # Django 애플리케이션 프록시
    location / {
        proxy_pass http://django_app;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_redirect off;
        
        # 타임아웃 설정
        proxy_connect_timeout 60s;
        proxy_send_timeout 60s;
        proxy_read_timeout 60s;
        
        # 버퍼링 설정
        proxy_buffering on;
        proxy_buffer_size 8k;
        proxy_buffers 8 8k;
    }
    
    # 로그인 페이지 Rate Limiting
    location /login/ {
        limit_req zone=login burst=10 nodelay;
        proxy_pass http://django_app;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }
    
    # API 엔드포인트 Rate Limiting
    location /api/ {
        limit_req zone=api burst=50 nodelay;
        proxy_pass http://django_app;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }
    
    # 보안 관련 파일 차단
    location ~ /\. {
        deny all;
        access_log off;
        log_not_found off;
    }
    
    location ~ ~$ {
        deny all;
        access_log off;
        log_not_found off;
    }
    
    # 헬스체크 엔드포인트
    location /health/ {
        proxy_pass http://django_app;
        access_log off;
    }
} 